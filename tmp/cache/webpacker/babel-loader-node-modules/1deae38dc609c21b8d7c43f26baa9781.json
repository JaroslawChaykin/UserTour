{"ast":null,"code":"var _jsxFileName = \"/home/jaroslaw/RubymineProjects/UserTure2/app/javascript/components/M_catform.js\";\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (typeof call === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\n\nvar M_catform = /*#__PURE__*/function (_React$Component) {\n  _inherits(M_catform, _React$Component);\n\n  var _super = _createSuper(M_catform);\n\n  function M_catform(props) {\n    var _this;\n\n    _classCallCheck(this, M_catform);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      name: props.category.name ? props.category.name : '',\n      description: props.category.description ? props.category.description : ''\n    };\n    _this.handleNameChange = _this.handleNameChange.bind(_assertThisInitialized(_this));\n    _this.handleDescriptionChange = _this.handleDescriptionChange.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(M_catform, [{\n    key: \"handleNameChange\",\n    value: function handleNameChange(e) {\n      this.setState({\n        name: e.target.value\n      });\n    }\n  }, {\n    key: \"handleDescriptionChange\",\n    value: function handleDescriptionChange(e) {\n      this.setState({\n        description: e.target.value\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 11\n        }\n      }, \"Name\"), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        name: \"category[name]\",\n        value: this.state.name,\n        onChange: this.handleNameChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }\n      }, \"Description\"), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        name: \"category[description]\",\n        value: this.state.description,\n        onChange: this.handleDescriptionChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }\n      }, \"Display in Navbar?\"), /*#__PURE__*/React.createElement(\"input\", {\n        defaultChecked: this.props.category.display_in_navbar ? this.props.category.display_in_navbar : false,\n        ref: this.input,\n        type: \"checkbox\",\n        name: \"category[display_in_navbar]\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"submit\",\n        value: \"Create category\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }\n      }));\n    }\n  }]);\n\n  return M_catform;\n}(React.Component);\n\nexport default M_catform;","map":{"version":3,"sources":["/home/jaroslaw/RubymineProjects/UserTure2/app/javascript/components/M_catform.js"],"names":["React","PropTypes","M_catform","props","state","name","category","description","handleNameChange","bind","handleDescriptionChange","e","setState","target","value","display_in_navbar","input","Component"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;IACMC,S;;;;;AACJ,qBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,8BAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACXC,MAAAA,IAAI,EAAEF,KAAK,CAACG,QAAN,CAAeD,IAAf,GAAsBF,KAAK,CAACG,QAAN,CAAeD,IAArC,GAA4C,EADvC;AAEXE,MAAAA,WAAW,EAAEJ,KAAK,CAACG,QAAN,CAAeC,WAAf,GAA6BJ,KAAK,CAACG,QAAN,CAAeC,WAA5C,GAA0D;AAF5D,KAAb;AAIA,UAAKC,gBAAL,GAAwB,MAAKA,gBAAL,CAAsBC,IAAtB,+BAAxB;AACA,UAAKC,uBAAL,GAA+B,MAAKA,uBAAL,CAA6BD,IAA7B,+BAA/B;AAPiB;AASlB;;;;qCACgBE,C,EAAG;AAClB,WAAKC,QAAL,CAAc;AAAEP,QAAAA,IAAI,EAAEM,CAAC,CAACE,MAAF,CAASC;AAAjB,OAAd;AACD;;;4CACuBH,C,EAAG;AACzB,WAAKC,QAAL,CAAc;AAAEL,QAAAA,WAAW,EAAEI,CAAC,CAACE,MAAF,CAASC;AAAxB,OAAd;AACD;;;6BAEQ;AACP,0BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AACI,QAAA,IAAI,EAAC,MADT;AAEI,QAAA,IAAI,EAAC,gBAFT;AAGI,QAAA,KAAK,EAAE,KAAKV,KAAL,CAAWC,IAHtB;AAII,QAAA,QAAQ,EAAE,KAAKG,gBAJnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,eASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBATF,eAUE;AACI,QAAA,IAAI,EAAC,MADT;AAEI,QAAA,IAAI,EAAC,uBAFT;AAGI,QAAA,KAAK,EAAE,KAAKJ,KAAL,CAAWG,WAHtB;AAII,QAAA,QAAQ,EAAE,KAAKG,uBAJnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAVF,eAgBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAhBF,eAiBE;AACI,QAAA,cAAc,EAAE,KAAKP,KAAL,CAAWG,QAAX,CAAoBS,iBAApB,GAAwC,KAAKZ,KAAL,CAAWG,QAAX,CAAoBS,iBAA5D,GAAgF,KADpG;AAEI,QAAA,GAAG,EAAE,KAAKC,KAFd;AAGI,QAAA,IAAI,EAAC,UAHT;AAII,QAAA,IAAI,EAAC,6BAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAjBF,eAwBE;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,KAAK,EAAC,iBAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAxBF,CADJ;AA4BD;;;;EA/CqBhB,KAAK,CAACiB,S;;AAkD9B,eAAef,SAAf","sourcesContent":["import React from \"react\"\nimport PropTypes from \"prop-types\"\nclass M_catform extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: props.category.name ? props.category.name : '',\n      description: props.category.description ? props.category.description : ''\n    };\n    this.handleNameChange = this.handleNameChange.bind(this);\n    this.handleDescriptionChange = this.handleDescriptionChange.bind(this);\n\n  }\n  handleNameChange(e) {\n    this.setState({ name: e.target.value });\n  }\n  handleDescriptionChange(e) {\n    this.setState({ description: e.target.value });\n  }\n\n  render() {\n    return (\n        <div>\n          <label>Name</label>\n          <input\n              type=\"text\"\n              name=\"category[name]\"\n              value={this.state.name}\n              onChange={this.handleNameChange}\n          />\n\n          <label>Description</label>\n          <input\n              type=\"text\"\n              name=\"category[description]\"\n              value={this.state.description}\n              onChange={this.handleDescriptionChange}\n          />\n          <label>Display in Navbar?</label>\n          <input\n              defaultChecked={this.props.category.display_in_navbar ? this.props.category.display_in_navbar : false}\n              ref={this.input}\n              type=\"checkbox\"\n              name=\"category[display_in_navbar]\"\n          />\n\n          <input type=\"submit\" value=\"Create category\" />\n        </div>\n    );\n  }\n}\n\nexport default M_catform"]},"metadata":{},"sourceType":"module"}