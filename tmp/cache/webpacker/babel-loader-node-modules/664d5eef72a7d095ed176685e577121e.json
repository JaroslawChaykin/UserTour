{"ast":null,"code":"var _jsxFileName = \"/home/jaroslaw/RubymineProjects/UserTure2/app/javascript/components/M_catview.js\";\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (typeof call === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\n\nvar M_catview = /*#__PURE__*/function (_React$Component) {\n  _inherits(M_catview, _React$Component);\n\n  var _super = _createSuper(M_catview);\n\n  function M_catview() {\n    _classCallCheck(this, M_catview);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(M_catview, [{\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 6,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 7,\n          columnNumber: 11\n        }\n      }, this.props.category.name), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 8,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"strong\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 8,\n          columnNumber: 14\n        }\n      }, \"ID:\"), \" \", this.props.category.id), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 9,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"strong\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 9,\n          columnNumber: 14\n        }\n      }, \"Name:\"), \" \", this.props.category.name), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 10,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"strong\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 10,\n          columnNumber: 14\n        }\n      }, \"Description:\"), \" \", this.props.category.description), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 11,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"strong\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 11,\n          columnNumber: 14\n        }\n      }, \"Display in Navbar:\"), \" \", \"\".concat(this.props.category.display_in_navbar)), /*#__PURE__*/React.createElement(\"a\", {\n        href: \"/categories/\".concat(this.props.category.id, \"/edit\"),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 11\n        }\n      }, \"Edit\"), /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 74\n        }\n      }, \" | \"), /*#__PURE__*/React.createElement(\"a\", {\n        href: \"./\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 11\n        }\n      }, \"Back\"));\n    }\n  }]);\n\n  return M_catview;\n}(React.Component);\n\nexport default M_catview;","map":{"version":3,"sources":["/home/jaroslaw/RubymineProjects/UserTure2/app/javascript/components/M_catview.js"],"names":["React","PropTypes","M_catview","props","category","name","id","description","display_in_navbar","Component"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;IACMC,S;;;;;;;;;;;;;6BACK;AACP,0BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAK,KAAKC,KAAL,CAAWC,QAAX,CAAoBC,IAAzB,CADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAH,OAAyB,KAAKF,KAAL,CAAWC,QAAX,CAAoBE,EAA7C,CAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAH,OAA2B,KAAKH,KAAL,CAAWC,QAAX,CAAoBC,IAA/C,CAHF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAAH,OAAkC,KAAKF,KAAL,CAAWC,QAAX,CAAoBG,WAAtD,CAJF,eAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAAH,iBAA2C,KAAKJ,KAAL,CAAWC,QAAX,CAAoBI,iBAA/D,EALF,eAME;AAAG,QAAA,IAAI,wBAAiB,KAAKL,KAAL,CAAWC,QAAX,CAAoBE,EAArC,UAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBANF,eAMiE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eANjE,eAOE;AAAG,QAAA,IAAI,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPF,CADJ;AAWD;;;;EAbqBN,KAAK,CAACS,S;;AAgB9B,eAAeP,SAAf","sourcesContent":["import React from \"react\"\nimport PropTypes from \"prop-types\"\nclass M_catview extends React.Component {\n  render() {\n    return (\n        <div>\n          <h1>{this.props.category.name}</h1>\n          <p><strong>ID:</strong> {this.props.category.id}</p>\n          <p><strong>Name:</strong> {this.props.category.name}</p>\n          <p><strong>Description:</strong> {this.props.category.description}</p>\n          <p><strong>Display in Navbar:</strong> {`${this.props.category.display_in_navbar}`}</p>\n          <a href={`/categories/${this.props.category.id}/edit`}>Edit</a><span> | </span>\n          <a href={`./`}>Back</a>\n        </div>\n    );\n  }\n}\n\nexport default M_catview"]},"metadata":{},"sourceType":"module"}